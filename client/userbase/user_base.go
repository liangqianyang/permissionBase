// Code generated by goctl. DO NOT EDIT!
// Source: permissionBase.proto

package userbase

import (
	"context"

	"github.com/qy-blog/permissionBase/pb/permissionBase"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreatePermissionRequest  = permissionBase.CreatePermissionRequest
	CreatePermissionResponse = permissionBase.CreatePermissionResponse
	CreateUserRequest        = permissionBase.CreateUserRequest
	CreateUserResponse       = permissionBase.CreateUserResponse

	UserBase interface {
		// CreateUser 创建用户
		CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	}

	defaultUserBase struct {
		cli zrpc.Client
	}
)

func NewUserBase(cli zrpc.Client) UserBase {
	return &defaultUserBase{
		cli: cli,
	}
}

// CreateUser 创建用户
func (m *defaultUserBase) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	client := permissionBase.NewUserBaseClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}
